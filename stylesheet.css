@import url("https://fonts.googleapis.com/css2?family=Noto+Sans:wght@300;400;600&display=swap");
* {
  margin: 0px;
  padding: 0px;
}

header {
  z-index: 5;
  box-sizing: border-box;
  position: fixed;
  top: -136px;
  width: 100%;
  height: 10rem;
  padding: 1rem 0;
  background-color: #9BA17B;
  transition: top 1s;
}
header:after {
  display: block;
  position: relative;
  top: 1rem;
  left: 2rem;
  content: "";
  width: 30px;
  height: 25px;
  background: url("data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' x='0px' y='0px' width='30px' height='25px' viewBox='0 0 30 25' xml:space='preserve'%3E%3Cpolygon points='0,0 30,0 15,25' style='fill:%239BA17B'/%3E%3C/svg%3E");
}
header h1 {
  max-width: 470px;
  margin: 0 auto;
  font: 4rem/4rem "Noto Sans", sans-serif;
  text-align: center;
  color: white;
}

footer {
  font: 1.5rem/3rem "Noto Sans", sans-serif;
  color: white;
  font-weight: 400;
  height: 3rem;
  padding-bottom: 10px;
  text-align: center;
  background-color: #9BA17B;
  position: fixed;
  transition: bottom 1s;
  bottom: -58px;
  width: 100%;
}

@media (min-width: 600px) {
  header {
    height: 6rem;
    background-color: #9BA17B;
    top: -72px;
  }
  header:after {
    left: 6rem;
  }
  header h1 {
    max-width: none;
  }
}
main {
  height: calc(100vh - 24px);
  min-height: 810px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
  background-color: #eeeeee;
  padding: 10px 0px;
  margin: 24px auto 0 auto;
  max-width: 900px;
  overflow: hidden;
}

.cards-container {
  flex-shrink: 0;
  position: relative;
  width: 24rem;
  margin: 250px auto 300px auto;
  border: 1px solid black;
  width: 12rem;
  height: 12rem;
  perspective: 1000px;
  perspective-origin: center center;
}

.cube {
  position: relative;
  width: 100%;
  height: 100%;
  transform-style: preserve-3d;
  transform: rotate3d(1, 1, 1, 30deg);
  transition: transform 1s;
}

.cube_card {
  position: absolute;
  width: 12rem;
  height: 12rem;
  font-family: "Noto Sans", sans-serif;
  font-size: 8rem;
  line-height: 12rem;
  border-radius: 32px;
  text-align: center;
  transition: transform 2s;
}
.cube_card:before {
  content: "";
  position: absolute;
  display: block;
  box-sizing: border-box;
  top: 1rem;
  left: 1rem;
  width: 10rem;
  height: 10rem;
  border: 2px solid black;
  border-radius: 16px;
}

.card_1 {
  --zposition: 40px;
  --xposition: -7rem;
  --yposition: -14rem;
  background-color: rgb(87, 115, 167);
}

.card_2 {
  --zposition: 32px;
  --yrotate: 90deg;
  --xposition: 7rem;
  --yposition: -14rem;
  background-color: rgb(151, 87, 167);
}

.card_3 {
  --zposition: 0px;
  --yrotate: 180deg;
  --xposition: -7rem;
  --yposition: 0rem;
  background-color: rgb(123, 167, 87);
}

.card_4 {
  --zposition: 16px;
  --yrotate: -90deg;
  --xposition: 7rem;
  --yposition: 0rem;
  background-color: rgb(167, 87, 87);
}

.card_5 {
  --zposition: 8px;
  --xrotate: 90deg;
  --xposition: -7rem;
  --yposition: 14rem;
  background-color: rgb(87, 167, 167);
}

.card_6 {
  --zposition: 24px;
  --xrotate: -90deg;
  --xposition: 7rem;
  --yposition: 14rem;
  background-color: rgb(167, 166, 87);
}

.pos_3d, .card_1, .card_2, .card_3, .card_4, .card_5, .card_6 {
  transform: rotateY(var(--yrotate, 0)) rotateX(var(--xrotate, 0)) translateZ(7rem);
  transition: transform 2s;
}

.pos_2d {
  transform: rotateY(0deg) rotateX(0deg) translateZ(0) translateX(var(--xposition, 0)) translateY(var(--yposition, 0));
  transition: transform 2s;
}

.arrange-plain {
  animation: cards-arrange 3s linear 1 normal;
  animation-fill-mode: forwards;
}

.arrange-reverse {
  animation: cards-arrange 3s linear 1 reverse;
  animation-fill-mode: forwards;
}

.animation-rotation {
  animation: cube-rotation 4s linear infinite;
}

@keyframes cube-rotation {
  to {
    transform: rotate3d(1, 1, 1, 390deg);
  }
}
@keyframes cards-arrange {
  0% {
    transform: rotateY(var(--yrotate, 0deg)) rotateX(var(--xrotate, 0deg)) translateZ(7rem);
  }
  20% {
    transform: rotateY(var(--yrotate, 0deg)) rotateX(var(--xrotate, 0deg)) translateZ(10rem);
  }
  40% {
    transform: rotateY(0deg) rotateX(0deg) translateZ(calc(12 * var(--zposition)));
  }
  70% {
    transform: rotateY(0deg) rotateX(0deg) translateZ(var(--zposition));
  }
  100% {
    transform: rotateY(0deg) rotateX(0deg) translateZ(0) translateX(var(--xposition, 0)) translateY(var(--yposition, 0));
  }
}
.state-display {
  width: 34rem;
  height: 3rem;
  background-color: #9BA17B;
  overflow: hidden;
}

.state-bar {
  font: 1rem/3rem "Noto Sans", sans-serif;
  position: relative;
  width: 100%;
  height: 3rem;
}
.state-bar .state-element {
  position: absolute;
  min-width: 10rem;
  text-align: center;
  transition: left 600ms;
}
.state-bar .state-0 {
  left: 1rem;
}
.state-bar .state-1 {
  left: 12rem;
}
.state-bar .state-2 {
  left: 23rem;
}
.state-bar .state-3 {
  left: 34rem;
}

.element-emphasis {
  font-weight: 600;
  font-size: 18px;
}

/*# sourceMappingURL=stylesheet.css.map */
